create Table Students 
(St_Id int primary key Identity(1,1) ,
St_Fname Varchar(25),
St_Lname Varchar(25),
Phone int ,
City Varchar(25),
Gender varchar(25) Check ( Gender = 'Female' or Gender = 'Male') ,
Faculty Varchar(25) ,
Grad_Year int ,
Age INT CHECK (age >= 20 AND age <= 33));
-------------------------------------2
Create table Instructors
( Ins_Id int Primary key Identity(1,1) ,
Ins_Fname Varchar(25) ,
Ins_Lname Varchar(25),
Phone int ,
City Varchar(25), 
Gender varchar(25) Check ( Gender = 'Female' or Gender = 'Male') ,
Hiring_Date Date ,
Salary Money ,
Age int );
----------------------------------------3
Create Table Courses
(Course_Id int Primary key Identity(1,1),
Course_Name Varchar(50),
Course_Duration int );
----------------------------------------4
Create table Questions 
(Quest_Id int Primary key Identity(1,1) ,
Quest_Type Varchar(25),
Quest_Title Varchar(250),
Model_Answer varchar(250),
Quest_Level varchar(50),
Course_Id Int,
Constraint Fk_cid1 Foreign key (Course_Id) 
references Courses(Course_Id) 
);
----------------------------------------5
Create Table Tracks
(Track_Id int primary key Identity(1,1),
Track_Name Varchar(50) ,
Ins_Id int,
Constraint FK_Insid1 Foreign key (Ins_Id) 
references Instructors(Ins_Id)
);
----------------------------------------6
Create Table Topics 
(Topic_Id Int primary key Identity(1,1),
Topic_Name Varchar(50) ,
Course_Id int,
Constraint Fk_cid2 Foreign key(Course_Id) 
references Courses(Course_Id) 
);
----------------------------------------7
Create Table Exams 
(Exam_Id int Primary key Identity (1,1),
Exam_Duration int ,
Exam_FullMark int ,
Question_Num int ,
Course_Id int,
Constraint Fk_cid3 Foreign key(Course_id)
references Courses(Course_Id) 
);
--------------------------------------------------8
Create table Branch
(Branch_Id int primary key Identity (1,1),
Branch_Loc Varchar(50)
);
----------------------------------------------9
Create table Tracks_Instructors
(Track_Id int , 
Ins_Id int ,
Constraint Fk_tid Foreign key (Track_id) References Tracks(Track_id),
Constraint FK_Insid2 foreign key (Ins_Id)  References Instructors(Ins_Id),
constraint PK1 Primary key (Track_Id , Ins_Id)
);
-----------------------------------------------------------------------10
Create Table Student_Course
(St_Id int ,
Course_Id int ,
Constraint FK_Sid1 Foreign key (St_Id) References Students (St_Id),
Constraint Fk_cid4 foreign key (Course_Id)  References Courses(Course_Id),
constraint PK2 Primary key (St_Id , Course_Id)
);
---------------------------------------------------------------11
Create Table Inst_Course
(Ins_Id int ,
Course_Id int ,
Constraint FK_Insid3 Foreign key (Ins_Id) References Instructors (Ins_Id),
Constraint Fk_cid5 foreign key (Course_Id)  References Courses(Course_Id),
constraint PK3 Primary key (Ins_Id , Course_Id )
);
-----------------------------------------------------12
Create Table Freelance 
(Freelance_Id int identity(1,1),
St_Id int ,
Job_Title Varchar(75),
Platform varchar(75),
Start_Date date ,
End_Date date,
Cost money ,
constraint FK_Sid2 Foreign key(St_id) references Students(St_id),
Constraint PK4 Primary key (Freelance_Id , St_Id)
);
-------------------------------------------------------------13
Create Table Hiring
(Hiring_Id int identity (1,1),
St_Id int,
Job_Title Varchar(75),
Hiring_Date Date,
Company_Name Varchar(75),
Constraint FK_Sid3 Foreign key (St_Id) references Students(St_Id),
Constraint PK5 primary key(Hiring_Id,St_Id)
);
----------------------------------------------------------------14

CREATE TABLE Certificates (
    Cert_verification VARCHAR(20) PRIMARY KEY,
    Cert_name VARCHAR(20),
    Duration INT CHECK (duration >= 0) ,
    Platform VARCHAR(20),
     
);


-------------------------------------------------------------------15
Create table Social_Media
(Social_Link  varchar(250),
St_Id int ,
Social_Name varchar(75),
Photo Varbinary(Max)
constraint FK_Sid4 foreign key (st_id) references Students(St_Id),
Constraint PK6 primary key(Social_Link,St_Id)
);

---------------------------------------------------------------16
Create table Login
(User_Name Varchar(50) ,
St_Id int,
Password int ,
Constraint FK_Sid5 Foreign key (St_Id) references Students(St_Id),
Constraint PK7 primary key(user_Name,St_Id)
);
------------------------------------------------------------------17
CREATE TABLE Student_Certificates 
(St_id INT,
 cert_verification VARCHAR(20),
 Constraint FK_Sid6 Foreign key (St_Id) references Students(St_Id),
 Constraint FK_CrtID Foreign key (cert_verification) references Certificates(cert_verification),
Constraint PK8 primary key(cert_verification,St_Id)
);

-----------------------------------------------------------------------18
Create table Intake
(Intake_Num int primary key ,
Intake_Start date ,
Intake_End date ,
);
------------------------------------------------------------------19
Create table Student_Answer
(Date date ,
Quest_Id int, 
Exam_Id int,
St_Id int,
Stud_Answer varchar(200),
Stud_Grade int 
Constraint FK_Sid7 Foreign key(St_Id) References Students(St_Id),
Constraint FK_QUid Foreign key(Quest_Id) References Questions(Quest_Id),
Constraint FK_EXid Foreign key(Exam_Id) References Exams(Exam_Id),
Constraint PK9 Primary key (Date,Exam_Id,St_Id)

);
------------------------------------------------------------------20
Create Table Student_Assign
(Date date ,
St_id int ,
track_id int ,
Branch_id int ,
Constraint FK_Sid8 Foreign key(St_Id) References Students(St_Id),
Constraint Fk_tid2  Foreign key(track_id) References Tracks(track_id),
Constraint FK_Brid Foreign key(Branch_id) References Branch(Branch_id),
Constraint PK10 Primary key (Date,St_Id)
);
---------------------------------------------------------------------21
Create Table Question_Choise 
(Quest_Id int ,
Choices Varchar(200) ,
Constraint FK_QUid2 Foreign key(Quest_Id) References Questions(Quest_Id),
Constraint PK11 Primary key (Quest_Id,Choices)

);
-----------------------------------------------------------------22
Create table Student_Intake
(St_Id int,
Intake_Num	int ,	
Constraint FK_Sid9 Foreign key(St_Id) References Students(St_Id),
Constraint FK_intnum Foreign key(Intake_Num) References Intake(Intake_Num),
Constraint PK12 Primary key (Intake_Num,St_Id)

);
-----------------------------------------
